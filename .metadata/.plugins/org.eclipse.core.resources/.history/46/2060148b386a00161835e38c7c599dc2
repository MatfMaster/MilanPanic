package milan.panic.master.spring.aop;

/**
 * Definicija MethodInterceptor, MethodInvocation
 * interfejsa u potpunosti je analogna InvocationHandler
 * odnosno Method interfejsu podržanom od strane Java 
 * programskog jezika.
 */
import org.aopalliance.intercept.MethodInterceptor;
import org.aopalliance.intercept.MethodInvocation;

/**
 * Implementacija around saveta. Ovaj savet je najopštiji i vidi se da
 * u mnogome podseća na invoke metod koji koristi zastupalac,
 * ponašanje ostalih saveta moguće je lako definisati od ovog najopštijeg.
 */
public class AroundMethod implements MethodInterceptor {
	@Override
	public Object invoke(MethodInvocation methodInvocation)
			throws Throwable {
		try {
			/**
			 * Objekat koji se prosleđuje kao parametar u mnogome
			 * olakšava korišćenje originalnog metoda, bez potrebe za
			 * rad sa parametrima ukoliko to nije neophodno.
			 */
			Object result = methodInvocation.proceed();
			return result;

		} catch (IllegalArgumentException e) {
			throw e;
		}
	}
}